package data_structures;


//class BST{
//	boolean search(Node1 root, int x) {
//		if(root==null)return false;
//		
//		if(root.key==x) return true;
//		else if(root.key>x) return search(root.right,x);
//		else return search(root.left,x);
//	}
//}

public class BinarySearchTree {
//	class Node1{
//		int key;
//		Node left, right;
//		public Node1(int item) {
//			key= item;
//			left= right= null;
//			
//		}
//	}
//	Node root;
//	
//	public BinarySearchTree() {
//		root=null;
//	}

	Node root;
	public BinarySearchTree() {
		root = null;
	}
	boolean search(Node root, int x) {
		if(root == null) return false;
		if(root.item == x) {
			return true;
		} else if (root.item>x) {
			return search(root.left,x);
		} else if(root.ite<x) {
			return search(root.right,x);
		}
		return false;
	}
	
	public static void main(String[] args) {
		BinarySearchTree bst = new BinarySearchTree();
		bst.root = new Node(8);
		bst.root.left = new Node(3);
		bst.root.right = new Node(10);
		bst.root.left.left = new Node(1);
		bst.root.left.right = new Node(5);
		bst.root.right.left = new Node(9);
		System.out.println(bst.search(bst.root,9));
	}

}
